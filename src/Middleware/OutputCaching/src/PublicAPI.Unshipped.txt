#nullable enable
Microsoft.AspNetCore.Builder.OutputCacheExtensions
Microsoft.AspNetCore.OutputCaching.CachedResponseBody
Microsoft.AspNetCore.OutputCaching.CachedResponseBody.CachedResponseBody(System.Collections.Generic.List<byte[]!>! segments, long length) -> void
Microsoft.AspNetCore.OutputCaching.CachedResponseBody.CopyToAsync(System.IO.Pipelines.PipeWriter! destination, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.CachedResponseBody.Length.get -> long
Microsoft.AspNetCore.OutputCaching.CachedResponseBody.Segments.get -> System.Collections.Generic.List<byte[]!>!
Microsoft.AspNetCore.OutputCaching.CachedVaryByRules
Microsoft.AspNetCore.OutputCaching.CachedVaryByRules.CachedVaryByRules() -> void
Microsoft.AspNetCore.OutputCaching.CachedVaryByRules.Headers.get -> Microsoft.Extensions.Primitives.StringValues
Microsoft.AspNetCore.OutputCaching.CachedVaryByRules.Headers.set -> void
Microsoft.AspNetCore.OutputCaching.CachedVaryByRules.QueryKeys.get -> Microsoft.Extensions.Primitives.StringValues
Microsoft.AspNetCore.OutputCaching.CachedVaryByRules.QueryKeys.set -> void
Microsoft.AspNetCore.OutputCaching.CachedVaryByRules.SetVaryByCustom(string! key, string! value) -> void
Microsoft.AspNetCore.OutputCaching.CachedVaryByRules.VaryByPrefix.get -> Microsoft.Extensions.Primitives.StringValues
Microsoft.AspNetCore.OutputCaching.CachedVaryByRules.VaryByPrefix.set -> void
Microsoft.AspNetCore.OutputCaching.IOutputCacheFeature
Microsoft.AspNetCore.OutputCaching.IOutputCacheFeature.Context.get -> Microsoft.AspNetCore.OutputCaching.OutputCacheContext!
Microsoft.AspNetCore.OutputCaching.IOutputCacheFeature.Policies.get -> Microsoft.AspNetCore.OutputCaching.Policies.PoliciesCollection!
Microsoft.AspNetCore.OutputCaching.IOutputCacheStore
Microsoft.AspNetCore.OutputCaching.IOutputCacheStore.EvictByTagAsync(string! tag, System.Threading.CancellationToken token) -> System.Threading.Tasks.ValueTask
Microsoft.AspNetCore.OutputCaching.IOutputCacheStore.GetAsync(string! key, System.Threading.CancellationToken token) -> System.Threading.Tasks.ValueTask<Microsoft.AspNetCore.OutputCaching.OutputCacheEntry?>
Microsoft.AspNetCore.OutputCaching.IOutputCacheStore.SetAsync(string! key, Microsoft.AspNetCore.OutputCaching.OutputCacheEntry! entry, System.TimeSpan validFor, System.Threading.CancellationToken token) -> System.Threading.Tasks.ValueTask
Microsoft.AspNetCore.OutputCaching.IOutputCachePolicy
Microsoft.AspNetCore.OutputCaching.IOutputCachePolicy.OnRequestAsync(Microsoft.AspNetCore.OutputCaching.OutputCacheContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.IOutputCachePolicy.OnServeFromCacheAsync(Microsoft.AspNetCore.OutputCaching.OutputCacheContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.IOutputCachePolicy.OnServeResponseAsync(Microsoft.AspNetCore.OutputCaching.OutputCacheContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.Duration.get -> int
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.Duration.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.NoCache.get -> bool
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.NoCache.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.OutputCacheAttribute() -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.PolicyName.get -> string?
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.PolicyName.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.VaryByHeaders.get -> string![]?
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.VaryByHeaders.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.VaryByQueryKeys.get -> string![]?
Microsoft.AspNetCore.OutputCaching.OutputCacheAttribute.VaryByQueryKeys.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheContext.EnableOutputCaching.get -> bool
Microsoft.AspNetCore.OutputCaching.OutputCacheContext.EnableOutputCaching.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry.Body.get -> Microsoft.AspNetCore.OutputCaching.CachedResponseBody!
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry.Body.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry.Created.get -> System.DateTimeOffset
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry.Created.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry.Headers.get -> Microsoft.AspNetCore.Http.IHeaderDictionary!
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry.Headers.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry.OutputCacheEntry() -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry.StatusCode.get -> int
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry.StatusCode.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry.Tags.get -> string![]?
Microsoft.AspNetCore.OutputCaching.OutputCacheEntry.Tags.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.AddPolicy(Microsoft.AspNetCore.OutputCaching.IOutputCachePolicy! policy) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.AddPolicy(System.Type! policyType) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.AddPolicy<T>() -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.AllowLocking(bool lockResponse = true) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Clear() -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Expire(System.TimeSpan expiration) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.NoCache() -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.OutputCachePolicyBuilder() -> void
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Policy(string! profileName) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.Tag(params string![]! tags) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByHeader(params string![]! headers) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByQuery(params string![]! queryKeys) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByValue(System.Func<Microsoft.AspNetCore.Http.HttpContext!, (string!, string!)>! varyBy) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByValue(System.Func<Microsoft.AspNetCore.Http.HttpContext!, System.Threading.Tasks.Task<(string!, string!)>!>! varyBy) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByValue(System.Func<Microsoft.AspNetCore.Http.HttpContext!, System.Threading.Tasks.Task<string!>!>! varyBy) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.VaryByValue(System.Func<Microsoft.AspNetCore.Http.HttpContext!, string!>! varyBy) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.With(System.Func<Microsoft.AspNetCore.OutputCaching.OutputCacheContext!, System.Threading.Tasks.Task<bool>!>! predicate) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.OutputCacheContext
Microsoft.AspNetCore.OutputCaching.OutputCacheContext.AllowCacheLookup.get -> bool
Microsoft.AspNetCore.OutputCaching.OutputCacheContext.AllowCacheLookup.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheContext.AllowCacheStorage.get -> bool
Microsoft.AspNetCore.OutputCaching.OutputCacheContext.AllowCacheStorage.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheContext.AllowLocking.get -> bool
Microsoft.AspNetCore.OutputCaching.OutputCacheContext.AllowLocking.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheContext.ResponseExpirationTimeSpan.get -> System.TimeSpan?
Microsoft.AspNetCore.OutputCaching.OutputCacheContext.ResponseExpirationTimeSpan.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheContext.ResponseTime.get -> System.DateTimeOffset?
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.AddPolicy(string! name, Microsoft.AspNetCore.OutputCaching.IOutputCachePolicy! policy) -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.AddPolicy(string! name, System.Action<Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!>! build) -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.ApplicationServices.get -> System.IServiceProvider!
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.ApplicationServices.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.BasePolicies.get -> Microsoft.AspNetCore.OutputCaching.Policies.PoliciesCollection!
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.DefaultExpirationTimeSpan.get -> System.TimeSpan
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.DefaultExpirationTimeSpan.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.MaximumBodySize.get -> long
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.MaximumBodySize.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.OutputCacheOptions() -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.SizeLimit.get -> long
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.SizeLimit.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.UseCaseSensitivePaths.get -> bool
Microsoft.AspNetCore.OutputCaching.OutputCacheOptions.UseCaseSensitivePaths.set -> void
Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder.With(System.Func<Microsoft.AspNetCore.OutputCaching.OutputCacheContext!, bool>! predicate) -> Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!
Microsoft.AspNetCore.OutputCaching.Policies.PoliciesCollection
Microsoft.AspNetCore.OutputCaching.Policies.PoliciesCollection.AddPolicy(Microsoft.AspNetCore.OutputCaching.IOutputCachePolicy! policy) -> void
Microsoft.AspNetCore.OutputCaching.Policies.PoliciesCollection.AddPolicy(System.Action<Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!>! build) -> void
Microsoft.AspNetCore.OutputCaching.Policies.PoliciesCollection.Clear() -> void
Microsoft.AspNetCore.OutputCaching.Policies.PoliciesCollection.Count.get -> int
Microsoft.AspNetCore.OutputCaching.Policies.PoliciesCollection.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.AspNetCore.OutputCaching.IOutputCachePolicy!>!
Microsoft.AspNetCore.OutputCaching.Policies.PoliciesCollection.PoliciesCollection() -> void
Microsoft.AspNetCore.OutputCaching.PolicyExtensions
Microsoft.Extensions.DependencyInjection.OutputCacheServicesExtensions
static Microsoft.AspNetCore.Builder.OutputCacheExtensions.UseOutputCache(this Microsoft.AspNetCore.Builder.IApplicationBuilder! app) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.AspNetCore.OutputCaching.PolicyExtensions.CacheOutput<TBuilder>(this TBuilder builder) -> TBuilder
static Microsoft.AspNetCore.OutputCaching.PolicyExtensions.CacheOutput<TBuilder>(this TBuilder builder, Microsoft.AspNetCore.OutputCaching.IOutputCachePolicy! policy) -> TBuilder
static Microsoft.AspNetCore.OutputCaching.PolicyExtensions.CacheOutput<TBuilder>(this TBuilder builder, System.Action<Microsoft.AspNetCore.OutputCaching.OutputCachePolicyBuilder!>! policy) -> TBuilder
static Microsoft.Extensions.DependencyInjection.OutputCacheServicesExtensions.AddOutputCaching(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Microsoft.Extensions.DependencyInjection.OutputCacheServicesExtensions.AddOutputCaching(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, System.Action<Microsoft.AspNetCore.OutputCaching.OutputCacheOptions!>! configureOptions) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
~Microsoft.AspNetCore.OutputCaching.OutputCacheContext.CachedVaryByRules.get -> Microsoft.AspNetCore.OutputCaching.CachedVaryByRules
~Microsoft.AspNetCore.OutputCaching.OutputCacheContext.CachedVaryByRules.set -> void
~Microsoft.AspNetCore.OutputCaching.OutputCacheContext.HttpContext.get -> Microsoft.AspNetCore.Http.HttpContext
~Microsoft.AspNetCore.OutputCaching.OutputCacheContext.Tags.get -> System.Collections.Generic.HashSet<string>
